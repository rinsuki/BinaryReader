name: test
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        os:
        - macOS-latest
        - ubuntu-20.04
        - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    # --- Linux
    - name: Install Dependencies (Linux)
      if: startsWith(matrix.os, 'ubuntu-')
      run: sudo apt update && sudo apt install libpcap-dev libcurl4-openssl-dev
    # --- Windows
    - uses: seanmiddleditch/gha-setup-vsdevenv@8c6bbf80998779f2bba87b1452832e561b65fd57
      if: startsWith(matrix.os, 'windows-')
    # from https://github.com/actions/virtual-environments/issues/1652#issuecomment-735446611
    - uses: actions/cache@v2
      id: cached-swift-installer
      if: startsWith(matrix.os, 'windows-')
      with:
        path: swift-installer.exe
        key: "${{ runner.os }}-https://swift.org/builds/development/windows10/swift-DEVELOPMENT-SNAPSHOT-2021-02-24-a/swift-DEVELOPMENT-SNAPSHOT-2021-02-24-a-windows10.exe"
    - name: Download Swift (Windows)
      if: startsWith(matrix.os, 'windows-') && steps.cached-swift-installer.outputs.cache-hit != 'true'
      run: curl -o swift-installer.exe https://swift.org/builds/development/windows10/swift-DEVELOPMENT-SNAPSHOT-2021-02-24-a/swift-DEVELOPMENT-SNAPSHOT-2021-02-24-a-windows10.exe
    - name: Install Swift (Windows)
      if: startsWith(matrix.os, 'windows-')
      run: Start-Process -Wait -FilePath swift-installer.exe -ArgumentList ("/quiet", "/norestart")
    - name: Set Environment Variables (Windows)
      if: startsWith(matrix.os, 'windows-')
      run: |
        echo "SDKROOT=C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "DEVELOPER_DIR=C:\Library\Developer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "C:\Library\Swift-development\bin;C:\Library\icu-67\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Library\Developer\Toolchains\unknown-Asserts-development.xctoolchain\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install Supporting Files (Windows)
      if: startsWith(matrix.os, 'windows-')
      run: |
        Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
        Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
        Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
        Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"    # --- Shared
    # --- Shared
    - name: Run Test
      run: swift test
